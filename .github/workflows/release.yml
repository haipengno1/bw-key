name: Release

on:
  push:
    tags:
      - v[0-9]+.*


env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -A dead_code
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'haipengno1'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: stable
      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          title: $version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'haipengno1'
    needs:
      - create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
          - target: aarch64-unknown-linux-gnu
          - target: arm_64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (windows-openssl)
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "RUSTFLAGS=$RUSTFLAGS -Ctarget-feature=+crt-static" >> $GITHUB_ENV
            echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
            echo "RUSTFLAGS=$RUSTFLAGS -Ctarget-feature=+crt-static" >> $GITHUB_ENV
            vcpkg install openssl:x64-windows-static
          elif [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y libssl-dev
          fi

      - uses: taiki-e/github-actions/install-rust@main
        with:
          toolchain: stable
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: bw-key
          target: ${{ matrix.target }}
          tar: all
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true