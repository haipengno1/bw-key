name: Release

on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -A dead_code
  RUST_BACKTRACE: 1
  CARGO_PROFILE_RELEASE_LTO: true

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'haipengno1'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          title: $version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'haipengno1'
    needs:
      - create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            cross: false
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
            cross: true
          - target: aarch64-apple-darwin
            os: macos-13
            cross: false
          - target: x86_64-apple-darwin
            os: macos-13
            cross: false
          - target: x86_64-pc-windows-msvc
            os: windows-2022
            cross: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
            echo "RUSTFLAGS=$RUSTFLAGS -Ctarget-feature=+crt-static" >> $GITHUB_ENV
            vcpkg update
            vcpkg install openssl:x64-windows-static
          elif [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libssl-dev pkg-config
            if [ "${{ matrix.cross }}" == "true" ]; then
              sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
              echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
              echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
              echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
            fi
          fi

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: bw-key
          target: ${{ matrix.target }}
          tar: unix
          zip: windows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}